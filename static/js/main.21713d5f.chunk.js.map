{"version":3,"sources":["GeneralInfo.js","WorkExperience.js","Education.js","App.js","index.js"],"names":["GeneralInfo","props","state","mode","name","email","phone","location","handleKeyDown","bind","handleChange","handleSave","handleEdit","this","Input","focus","event","key","form","target","index","Array","prototype","indexOf","call","elements","setState","console","log","id","value","className","onClick","type","ref","input","onKeyDown","onChange","Component","WorkExperience","items","position","company","description","startDate","endDate","ongoing","handleKeyPress","handleAdd","prevInput","updateThis","checked","inputs","length","alert","newItems","newInput","slice","htmlFor","placeholder","required","rows","WorkExperienceEntry","onEdit","months","map","item","Date","startDateString","getMonth","getFullYear","endDateString","Education","qualification","institute","EducationEntry","App","switchMode","from","document","getElementsByClassName","forEach","button","remove","window","print","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.21713d5f.chunk.js","sourcesContent":["import { Component } from \"react\";\n\nclass GeneralInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { mode: \"edit\", name: \"\", email: \"\", phone: \"\", location: \"\" };\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n  }\n\n  componentDidMount() {\n    this.Input.focus();\n  }\n\n  handleKeyDown(event) {\n    if (event.key == \"Enter\") {\n      const form = event.target.form;\n      const index = Array.prototype.indexOf.call(form, event.target);\n\n      if (form.elements[index + 1]) {\n        form.elements[index + 1].focus();\n      } else {\n        this.setState({ mode: \"view\" });\n        console.log(this.state);\n      }\n    }\n  }\n\n  handleChange(event) {\n    if (event.target.id == \"nameInput\") {\n      this.setState({ name: event.target.value });\n    }\n\n    if (event.target.id == \"emailInput\") {\n      this.setState({ email: event.target.value });\n    }\n\n    if (event.target.id == \"phoneInput\") {\n      this.setState({ phone: event.target.value });\n    }\n\n    if (event.target.id == \"locationInput\") {\n      this.setState({ location: event.target.value });\n    }\n  }\n\n  handleSave(event) {\n    this.setState({ mode: \"view\" });\n  }\n\n  handleEdit(event) {\n    this.setState({ mode: \"edit\" });\n  }\n  render() {\n    if (this.state.mode == \"view\") {\n      return (\n        <div\n          id=\"GeneralInfo\"\n          className=\"view\"\n          className=\"nes-container with-title\"\n        >\n          <h2 className=\"title\">General Information</h2>\n          <form>\n            <ul>\n              <li>name: {this.state.name}</li>\n              <li>email: {this.state.email}</li>\n              <li>phone no: {this.state.phone}</li>\n              <li>location: {this.state.location}</li>\n            </ul>\n          </form>\n          <button\n            id=\"editbtn\"\n            onClick={this.handleEdit}\n            className=\"nes-btn is-primary\"\n          >\n            Edit\n          </button>\n        </div>\n      );\n    } else if (this.state.mode == \"edit\") {\n      return (\n        <div\n          id=\"GeneralInfo\"\n          className=\"edit\"\n          className=\"nes-container with-title\"\n        >\n          <h2 className=\"title\">General Information</h2>\n          <form>\n            <ul>\n              <li>\n                name:\n                <input\n                  type=\"text\"\n                  id=\"nameInput\"\n                  ref={(input) => {\n                    this.Input = input;\n                  }}\n                  onKeyDown={this.handleKeyDown}\n                  onChange={this.handleChange}\n                  className=\"nes-input\"\n                  value={this.state.name}\n                ></input>\n              </li>\n              <li>\n                email:\n                <input\n                  type=\"email\"\n                  id=\"emailInput\"\n                  ref={(input) => {\n                    this.Input = input;\n                  }}\n                  onKeyDown={this.handleKeyDown}\n                  onChange={this.handleChange}\n                  className=\"nes-input\"\n                  value={this.state.email}\n                ></input>\n              </li>\n              <li>\n                phone no:\n                <input\n                  type=\"text\"\n                  id=\"phoneInput\"\n                  ref={(input) => {\n                    this.Input = input;\n                  }}\n                  onKeyDown={this.handleKeyDown}\n                  onChange={this.handleChange}\n                  className=\"nes-input\"\n                  value={this.state.phone}\n                ></input>\n              </li>\n              <li>\n                location:\n                <input\n                  type=\"text\"\n                  id=\"locationInput\"\n                  ref={(input) => {\n                    this.Input = input;\n                  }}\n                  onKeyDown={this.handleKeyDown}\n                  onChange={this.handleChange}\n                  className=\"nes-input\"\n                  value={this.state.location}\n                ></input>\n              </li>\n            </ul>\n          </form>\n          <button\n            id=\"savebtn\"\n            onClick={this.handleSave}\n            className=\"nes-btn is-success\"\n          >\n            SAVE\n          </button>\n        </div>\n      );\n    }\n  }\n}\n\nexport default GeneralInfo;\n","import { Component } from 'react'\n\nclass WorkExperience extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        items: [],\n        input: {\n          position: \"\",\n          company: \"\",\n          description: \"\",\n          startDate: \"\",\n          endDate: \"\",\n          ongoing: \"\",\n        },\n        mode: \"edit\",\n      };\n      this.handleKeyPress = this.handleKeyPress.bind(this);\n      this.handleChange = this.handleChange.bind(this);\n      this.handleSave = this.handleSave.bind(this);\n      this.handleAdd = this.handleAdd.bind(this);\n      this.handleEdit = this.handleEdit.bind(this);\n    }\n  \n    handleChange(event) {\n      if (event.target.name === \"ongoing\") {\n        const prevInput = this.state.input;\n        const updateThis = event.target.name;\n        this.setState({\n          input: { ...prevInput, [updateThis]: event.target.checked },\n        });\n      } else {\n        const prevInput = this.state.input;\n        const updateThis = event.target.name;\n        this.setState({\n          input: { ...prevInput, [updateThis]: event.target.value },\n        });\n      }\n    }\n  \n    handleKeyPress(event) {\n      if (event.key === \"Enter\") {\n        this.handleChange(event);\n        const form = event.target.form;\n        const index = Array.prototype.indexOf.call(form, event.target);\n        console.log(form);\n        if (form.elements[index + 1]) {\n          form.elements[index + 1].focus();\n        } else {\n          this.setState({ mode: \"view\" });\n          console.log(this.state);\n        }\n      }\n    }\n  \n    handleSave() {\n      let inputs = {...this.state.input, id: [this.state.items.length]};\n      if (this.state.input.position === \"\") {\n        alert(\"Please fill empty fields!\");\n      } else if (this.state.input.company === \"\") {\n        alert(\"Please fill empty fields!\");\n      } else if (this.state.input.description === \"\") {\n        alert(\"Please fill empty fields!\");\n      } else if (this.state.input.startDate === \"\") {\n        alert(\"Please fill empty fields!\");\n      } else {\n        let newItems = [...this.state.items, inputs];\n        this.setState({ items: newItems, mode: \"view\" });\n      }\n    }\n  \n    handleAdd() {\n      this.setState({ mode: \"edit\", input: {\n        position: \"\",\n        company: \"\",\n        description: \"\",\n        startDate: \"\",\n        endDate: \"\",\n        ongoing: \"\",\n      } });\n    }\n  \n    handleEdit(id) {\n      let newInput = {position: this.state.items[id].position, company: this.state.items[id].company,\n                          description: this.state.items[id].description, startDate: this.state.items[id].startDate,\n                        endDate: this.state.items[id].endDate, ongoing: this.state.items[id].endDate}\n      this.setState({input: newInput}, () => {let items = this.state.items;\n        let newItems = [...items.slice(0,id), ...items.slice(id+1)]\n        this.setState({items: newItems, mode: 'edit'}, () => {console.log(this.state)})\n      })\n                   \n    }\n  \n    render() {\n      if (this.state.mode == \"edit\") {\n        console.log('From inside render')\n        console.log(this.state)\n        return (\n          <div id=\"WorkExperience\" className=\"nes-container with-title\">\n            <h2 className=\"title\">Work Experience</h2>\n            {this.state.items.length === 0 ? (\n              \"\"\n            ) : (\n              <WorkExperienceEntry items={this.state.items} handleEdit = {this.handleEdit} />\n            )}\n            <form>\n              <div className=\"nes-field\">\n                <label htmlFor=\"role\">role: </label>\n                <input\n                  type=\"text\"\n                  id=\"roleInput\"\n                  className=\"nes-input\"\n                  placeholder=\"unpaid intern? :(\"\n                  name=\"position\"\n                  onChange={this.handleChange}\n                  onKeyDown={this.handleKeyPress}\n                  value= {this.state.input.position}\n                  required\n                ></input>\n              </div>\n              <div className=\"nes-field\">\n                <label htmlFor=\"company\">company: </label>\n                <input\n                  type=\"text\"\n                  id=\"companyInput\"\n                  className=\"nes-input\"\n                  placeholder=\"Broke ass $tartup? :/\"\n                  name=\"company\"\n                  onChange={this.handleChange}\n                  onKeyDown={this.handleKeyPress}\n                  value={this.state.input.company}\n                  required\n                ></input>\n              </div>\n              <div className=\"nes-field\">\n                <label htmlFor=\"description\">describe your role: </label>\n                <textarea\n                  id=\"descriptionInput\"\n                  rows=\"5\"\n                  className=\"nes-textarea\"\n                  name=\"description\"\n                  placeholder=\"trying to understand old codebases...\"\n                  onChange={this.handleChange}\n                  onKeyDown={this.handleKeyPress}\n                  value={this.state.input.description}\n                  required\n                ></textarea>\n              </div>\n              <div id=\"startDate\">\n                <label htmlFor=\"startDate\">Joining date: </label>\n                <input\n                  type=\"month\"\n                  className=\"nes-input\"\n                  name=\"startDate\"\n                  id=\"startDateInput\"\n                  onChange={this.handleChange}\n                  value = {this.state.input.startDate}\n                  required\n                ></input>\n              </div>\n              <div id=\"endDate\">\n                <label htmlFor=\"endDate\">Leaving Date: </label>\n                <input\n                  type=\"month\"\n                  className=\"nes-input\"\n                  name=\"endDate\"\n                  id=\"endDateInput\"\n                  value={this.state.input.endDate}\n                  onChange={this.handleChange}\n                ></input>\n              </div>\n              <div className=\"nes-field\">\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    className=\"nes-checkbox\"\n                    id=\"currentWork\"\n                    onChange={this.handleChange}\n                    value={this.state.input.ongoing?'on':''}\n                    name=\"ongoing\"\n                  ></input>\n                  <span>Currently employed</span>\n                </label>\n              </div>\n            </form>\n            <div className=\"buttons\">\n              <button\n                id=\"savebtn\"\n                onClick={this.handleSave}\n                className=\"nes-btn is-success\"\n              >\n                SAVE\n              </button>\n            </div>\n          </div>\n        );\n      } else if (this.state.mode == \"view\") {\n        return (\n          <div id=\"WorkExperience\" className=\"nes-container with-title\">\n            <h2 className=\"title\"> Work Experience </h2>\n            <WorkExperienceEntry items={this.state.items} handleEdit = {this.handleEdit}/>\n            <div className=\"buttons\">\n              <button\n                id=\"addbtn\"\n                onClick={this.handleAdd}\n                className=\"nes-btn is-primary\"\n              >\n                Add Another\n              </button>\n            </div>\n          </div>\n        );\n      }\n    }\n  }\n  \n  class WorkExperienceEntry extends Component {\n    constructor(props) {\n      super(props)\n  \n      this.onEdit = this.onEdit.bind(this)\n    }\n  \n    onEdit(event) {\n      this.props.handleEdit(event.target.id)\n    }\n  \n    render() {\n      const months = [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\",\n      ];\n      console.log(this.props.items);\n      return this.props.items.map((item) => {\n        let endDate = item.endDate;\n        let startDate = new Date(item.startDate);\n        let startDateString =\n          months[startDate.getMonth()] + \", \" + startDate.getFullYear();\n        let endDateString = \"\";\n        if (item.endDate == \"\") {\n          endDateString = \"Present\";\n        } else {\n          endDate = new Date(item.endDate);\n          endDateString =\n            months[endDate.getMonth()] + \", \" + endDate.getFullYear();\n        }\n        return (\n          <div className={\"WorkExperienceEntry nes-container\"} id={item.id}>\n            <ul>\n              <li>role: {item.position} </li>\n              <li>company: {item.company}</li>\n              <li>job description: {item.description}</li>\n              <li>\n                duration: {startDateString} to {endDateString}\n              </li>\n            </ul>\n            <button id = {item.id} className = 'nes-btn is-primary' onClick = {this.onEdit}> Edit </button>\n          </div>\n        );\n      });\n    }\n  }\n\nexport default WorkExperience","import { Component } from \"react\";\nclass Education extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      input: {\n        qualification: \"\",\n        institute: \"\",\n        description: \"\",\n        startDate: \"\",\n        endDate: \"\",\n        ongoing: \"\",\n      },\n      mode: \"edit\",\n    };\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleAdd = this.handleAdd.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n  }\n\n  handleChange(event) {\n    if (event.target.name === \"ongoing\") {\n      const prevInput = this.state.input;\n      const updateThis = event.target.name;\n      this.setState({\n        input: { ...prevInput, [updateThis]: event.target.checked },\n      });\n    } else {\n      const prevInput = this.state.input;\n      const updateThis = event.target.name;\n      this.setState({\n        input: { ...prevInput, [updateThis]: event.target.value },\n      });\n    }\n  }\n\n  handleKeyPress(event) {\n    if (event.key === \"Enter\") {\n      this.handleChange(event);\n      const form = event.target.form;\n      const index = Array.prototype.indexOf.call(form, event.target);\n      console.log(form);\n      if (form.elements[index + 1]) {\n        form.elements[index + 1].focus();\n      } else {\n        this.setState({ mode: \"view\" });\n        console.log(this.state);\n      }\n    }\n  }\n\n  handleSave() {\n    let inputs = { ...this.state.input, id: [this.state.items.length] };\n    if (this.state.input.position === \"\") {\n      alert(\"Please fill empty fields!\");\n    } else if (this.state.input.company === \"\") {\n      alert(\"Please fill empty fields!\");\n    } else if (this.state.input.description === \"\") {\n      alert(\"Please fill empty fields!\");\n    } else if (this.state.input.startDate === \"\") {\n      alert(\"Please fill empty fields!\");\n    } else {\n      let newItems = [...this.state.items, inputs];\n      this.setState({ items: newItems, mode: \"view\" });\n    }\n  }\n\n  handleAdd() {\n    this.setState({\n      mode: \"edit\",\n      input: {\n        position: \"\",\n        company: \"\",\n        description: \"\",\n        startDate: \"\",\n        endDate: \"\",\n        ongoing: \"\",\n      },\n    });\n  }\n\n  handleEdit(id) {\n    let newInput = {\n      position: this.state.items[id].position,\n      company: this.state.items[id].company,\n      description: this.state.items[id].description,\n      startDate: this.state.items[id].startDate,\n      endDate: this.state.items[id].endDate,\n      ongoing: this.state.items[id].endDate,\n    };\n    this.setState({ input: newInput }, () => {\n      let items = this.state.items;\n      let newItems = [...items.slice(0, id), ...items.slice(id + 1)];\n      this.setState({ items: newItems, mode: \"edit\" }, () => {\n        console.log(this.state);\n      });\n    });\n  }\n\n  render() {\n    if (this.state.mode == \"edit\") {\n      return (\n        <div id=\"WorkExperience\" className=\"nes-container with-title\">\n          <h2 className=\"title\">Education</h2>\n          {this.state.items.length === 0 ? (\n            \"\"\n          ) : (\n            <EducationEntry\n              items={this.state.items}\n              handleEdit={this.handleEdit}\n            />\n          )}\n          <form>\n            <div className=\"nes-field\">\n              <label htmlFor=\"role\">Course name: </label>\n              <input\n                type=\"text\"\n                id=\"roleInput\"\n                className=\"nes-input\"\n                name=\"position\"\n                onChange={this.handleChange}\n                onKeyDown={this.handleKeyPress}\n                value={this.state.input.position}\n                required\n              ></input>\n            </div>\n            <div className=\"nes-field\">\n              <label htmlFor=\"company\">Institute: </label>\n              <input\n                type=\"text\"\n                id=\"companyInput\"\n                className=\"nes-input\"\n                placeholder=\"Broke ass $tartup? :/\"\n                name=\"company\"\n                onChange={this.handleChange}\n                onKeyDown={this.handleKeyPress}\n                value={this.state.input.company}\n                required\n              ></input>\n            </div>\n            <div className=\"nes-field\">\n              <label htmlFor=\"description\">Details: </label>\n              <textarea\n                id=\"descriptionInput\"\n                rows=\"5\"\n                className=\"nes-textarea\"\n                name=\"description\"\n                placeholder=\"trying to understand old codebases...\"\n                onChange={this.handleChange}\n                onKeyDown={this.handleKeyPress}\n                value={this.state.input.description}\n                required\n              ></textarea>\n            </div>\n            <div id=\"startDate\">\n              <label htmlFor=\"startDate\">Starting date: </label>\n              <input\n                type=\"month\"\n                className=\"nes-input\"\n                name=\"startDate\"\n                id=\"startDateInput\"\n                onChange={this.handleChange}\n                value={this.state.input.startDate}\n                required\n              ></input>\n            </div>\n            <div id=\"endDate\">\n              <label htmlFor=\"endDate\">Graduation Date: </label>\n              <input\n                type=\"month\"\n                className=\"nes-input\"\n                name=\"endDate\"\n                id=\"endDateInput\"\n                value={this.state.input.endDate}\n                onChange={this.handleChange}\n              ></input>\n            </div>\n            <div className=\"nes-field\">\n              <label>\n                <input\n                  type=\"checkbox\"\n                  className=\"nes-checkbox\"\n                  id=\"currentWork\"\n                  onChange={this.handleChange}\n                  value={this.state.input.ongoing ? \"on\" : \"\"}\n                  name=\"ongoing\"\n                ></input>\n                <span>Ongoing</span>\n              </label>\n            </div>\n          </form>\n          <div className=\"buttons\">\n            <button\n              id=\"savebtn\"\n              onClick={this.handleSave}\n              className=\"nes-btn is-success\"\n            >\n              SAVE\n            </button>\n          </div>\n        </div>\n      );\n    } else if (this.state.mode == \"view\") {\n      return (\n        <div id=\"WorkExperience\" className=\"nes-container with-title\">\n          <h2 className=\"title\">Education </h2>\n          <EducationEntry\n            items={this.state.items}\n            handleEdit={this.handleEdit}\n          />\n          <div className=\"buttons\">\n            <button\n              id=\"addbtn\"\n              onClick={this.handleAdd}\n              className=\"nes-btn is-primary\"\n            >\n              Add Another\n            </button>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nclass EducationEntry extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onEdit = this.onEdit.bind(this);\n  }\n\n  onEdit(event) {\n    this.props.handleEdit(event.target.id);\n  }\n\n  render() {\n    const months = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n    console.log(this.props.items);\n    return this.props.items.map((item) => {\n      let endDate = item.endDate;\n      let startDate = new Date(item.startDate);\n      let startDateString =\n        months[startDate.getMonth()] + \", \" + startDate.getFullYear();\n      let endDateString = \"\";\n      if (item.endDate == \"\") {\n        endDateString = \"Present\";\n      } else {\n        endDate = new Date(item.endDate);\n        endDateString =\n          months[endDate.getMonth()] + \", \" + endDate.getFullYear();\n      }\n      return (\n        <div className={\"WorkExperienceEntry nes-container\"} id={item.id}>\n          <ul>\n            <li>Course: {item.position} </li>\n            <li>Institute: {item.company}</li>\n            <li>Course details: {item.description}</li>\n            <li>\n              Duration: {startDateString} to {endDateString}\n            </li>\n          </ul>\n          <button\n            id={item.id}\n            className=\"nes-btn is-primary\"\n            onClick={this.onEdit}\n          >\n            {\" \"}\n            Edit{\" \"}\n          </button>\n        </div>\n      );\n    });\n  }\n}\n\nexport default Education;\n","import React, { Component } from \"react\";\nimport GeneralInfo from \"./GeneralInfo.js\";\nimport WorkExperience from \"./WorkExperience.js\";\nimport Education from \"./Education.js\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { mode: \"edit\" };\n    this.switchMode = this.switchMode.bind(this);\n  }\n\n  switchMode() {\n    let buttons = Array.from(document.getElementsByClassName(\"nes-btn\"));\n    buttons.forEach((button) => {\n      button.remove();\n    });\n    window.print();\n  }\n  render() {\n    return (\n      <div id=\"everything\">\n        <h1> CV Creator</h1>\n        <GeneralInfo />\n        <WorkExperience />\n        <Education />\n        <button className=\"nes-btn is-primary\" onClick={this.switchMode}>\n          Print\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"nes.css/css/nes.min.css\";\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}